        /*! 
        //  prefix.1.1.min.js Copyright (C) 2013, 2014 guest271314 BSD-2-Clause lincense http://opensource.org/licenses/BSD-2-Clause
        //  add css `prefixes`
        //  optional, on omit, include vendor prefixes, e.g, `webkit` in `css`, `js`
        //  TODO: `opera` compatability (opera utilizes `-o-`, `-webkit-`,  w3c)
        */
        (function prefix() {
            /* var el = $(selector).get(0), i.e.g, $("body").get(0), $("#animated").get(0) */
            var prefixes = {"MozAnimation": "-moz-","webkitAnimation": "-webkit-","msAnimation": "-ms-","oAnimation": "-o-"};
            var props = ["animation", "backface-visibility", "border-radius", "box-shadow", "transform", "transform-style", "transition"];
            $.each(prefixes, function(key, val) {
                $("style")
                .attr({"data-prefix": val,"class": String(val).replace(/-/g, "")});
                return !(key in el.style);
            });
            $.each(props, function(index, value) {
                var cssPrefix = $("style").attr("data-prefix");
                if (value in el.style === false) {
                    $.fn.pfx = function(prop, pfxprop, q) {
                        return $("style").html($("style").text().replace(new RegExp(prop, "g"), q + $("style").attr("data-prefix") + pfxprop))
                    };
                    $("style").pfx("@keyframes", "keyframes", "@")
                    .pfx(value, value, "");
                };
            });
        }());
